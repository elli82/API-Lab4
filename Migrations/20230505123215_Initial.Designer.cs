// <auto-generated />
using API_Lab4.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Lab4.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230505123215_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIModels.Hobby", b =>
                {
                    b.Property<int>("HobbyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HobbyId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HobbyId");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            HobbyId = 1,
                            Description = "Love spending time in the stable, the connection with the horse, riding etc",
                            Title = "Horse-ridng"
                        },
                        new
                        {
                            HobbyId = 2,
                            Description = "The mountains, the thrill of the speed, hot chocolate, Jäger etc",
                            Title = "Skiing"
                        },
                        new
                        {
                            HobbyId = 3,
                            Description = "Enjoys going out with the boat, hoping to catch a big pike",
                            Title = "Fishing"
                        },
                        new
                        {
                            HobbyId = 4,
                            Description = "Enjoys a good match",
                            Title = "Padel"
                        });
                });

            modelBuilder.Entity("APIModels.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkId"));

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("WebLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkId");

                    b.HasIndex("HobbyId");

                    b.HasIndex("PersonId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            HobbyId = 1,
                            PersonId = 1,
                            WebLink = "https://www.varbergsridskola.se"
                        },
                        new
                        {
                            LinkId = 2,
                            HobbyId = 2,
                            PersonId = 1,
                            WebLink = "https://www.lofsdalen.com/sv/skidakning"
                        },
                        new
                        {
                            LinkId = 3,
                            HobbyId = 2,
                            PersonId = 2,
                            WebLink = "https://www.skistar.com/sv/myskistar/destination/trysil/"
                        },
                        new
                        {
                            LinkId = 4,
                            HobbyId = 3,
                            PersonId = 2,
                            WebLink = "https://www.visitvarberg.se/ovrigt/outdoor/outdoorsidor/fiska.html"
                        },
                        new
                        {
                            LinkId = 5,
                            HobbyId = 1,
                            PersonId = 3,
                            WebLink = "https://minhast.se/"
                        },
                        new
                        {
                            LinkId = 6,
                            HobbyId = 4,
                            PersonId = 3,
                            WebLink = "https://www.facebook.com/ponactive/"
                        });
                });

            modelBuilder.Entity("APIModels.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Name = "Elin Otterdahl",
                            PhoneNumber = 706342635
                        },
                        new
                        {
                            PersonId = 2,
                            Name = "Marcus Linderholm",
                            PhoneNumber = 70834728
                        },
                        new
                        {
                            PersonId = 3,
                            Name = "Sofie Apelqvist",
                            PhoneNumber = 70726492
                        });
                });

            modelBuilder.Entity("HobbyPerson", b =>
                {
                    b.Property<int>("HobbiesHobbyId")
                        .HasColumnType("int");

                    b.Property<int>("PersonsPersonId")
                        .HasColumnType("int");

                    b.HasKey("HobbiesHobbyId", "PersonsPersonId");

                    b.HasIndex("PersonsPersonId");

                    b.ToTable("HobbyPerson");
                });

            modelBuilder.Entity("APIModels.Link", b =>
                {
                    b.HasOne("APIModels.Hobby", "Hobby")
                        .WithMany("Links")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIModels.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hobby");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HobbyPerson", b =>
                {
                    b.HasOne("APIModels.Hobby", null)
                        .WithMany()
                        .HasForeignKey("HobbiesHobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIModels.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIModels.Hobby", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
